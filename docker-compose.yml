version: '3.7'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  drupal:
    build: .
    container_name: ${DRUPAL_CONTAINER_NAME}
    volumes:
      - ./drupal:/var/www/html
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      DRUPAL_DB_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_CONTAINER_NAME}:5432/${POSTGRES_DATABASE}
    networks:
      default:
        aliases:
          - ${DRUPAL_CONTAINER_NAME}  # AÃ±adir un alias con el nombre del contenedor

  react:
    image: node:18-bullseye-slim
    container_name: ${REACT_CONTAINER_NAME}
    working_dir: /app
    volumes:
      - ./react:/app
    ports:
      - "3000:3000"
    command: >
      sh -c "if [ ! -d /app/myapp ]; then
               npx create-react-app myapp && cd myapp && npm install;
             else
               cd myapp && npm install;
             fi && npm start"
    restart: unless-stopped
    networks:
      default:
        aliases:
          - ${REACT_CONTAINER_NAME}
    environment:
      - NODE_OPTIONS=--max-old-space-size=4096

volumes:
  postgres_data:
  drupal_modules:
  drupal_profiles:
  drupal_themes:
  drupal_sites:
  react:
